% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_mpox_network.R
\name{model_mpox_network}
\alias{model_mpox_network}
\title{Mpox network model simulation of epidemic dynamics over time}
\usage{
model_mpox_network(
  M,
  N_1,
  N_2,
  contact_matrix,
  age_distribution,
  degree_zero,
  degree_distribution,
  beta,
  p_cont,
  sigma,
  gamma,
  seed_infected,
  time_end,
  time_increment,
  initial = NULL,
  x_output = FALSE
)
}
\arguments{
\item{M}{int - total number of age groups}

\item{N_1}{int - first sexually active age group}

\item{N_2}{int - last sexually active age group, 1 <= N_1 <= N_2 <= M}

\item{contact_matrix}{matrix\link{M, M} - global contact rates, contact_matrix\link{i, j} = contact_matrix\link{j, i}
per-pair global contact rate between age groups i and j}

\item{age_distribution}{vector\link{M} - population age distribution}

\item{degree_zero}{double >=0 - fraction of sexually active population with degree zero}

\item{degree_distribution}{vector - defective distribution of degrees 1,..., D_max, excluding degree_zero}

\item{beta}{double >=0 - transmission rate sexual contact per day}

\item{p_cont}{double between 0 and 1 - transmission probability global contact}

\item{sigma}{double >= 0 - 1/sigma mean latent period in days}

\item{gamma}{double >= 0 - recovery rate per day}

\item{seed_infected}{double between 0 and 1 - initial infected}

\item{time_end}{int - end time of simulation in days}

\item{time_increment}{double - increment time steps in simulation}

\item{initial}{vector - user provided initial value condition,
default is NULL corresponding to uniform distribution of infection over the age groups}
}
\value{
tibble
}
\description{
Mpox network model simulation of epidemic dynamics over time
}
\examples{
data <- model_mpox_network(
  M = 4, N_1 = 2, N_2 = 3,
  contact_matrix = matrix(c(c(1, 0, 0, 1), c(0, 1, 1, 0), c(0, 1, 1, 0), c(1, 0, 0, 1)), nrow = 4),
  age_distribution = c(1 / 8, 3 / 8, 2 / 8, 2 / 8),
  degree_zero = 0,
  degree_distribution = c(0, 0, 0.3, 0.7),
  beta = 0.1, p_cont = 1, sigma = 1 / 5, gamma = 1 / 5,
  seed_infected = 1E-3,
  time_end = 600,
  time_increment = 1
)
}
